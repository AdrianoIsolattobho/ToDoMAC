            // Generated from Java method: controller.Controller.generaUniversita
            // This is an experimental feature. Please report issues to https://github.com/ZenUml/jetbrains-zenuml/discussions
            
            Controller.generaUniversita(mainView) {
  Bacheca universita = utenteAttuale.getUniversita()
  utenteAttuale.getUniversita()
  return universita
  boolean haToDoUniversita = false
  if (universita != null && universita.getToDoList() != null) {
    JPanel contenitoreToDoU = mainView.getContenitoreToDoU()
    mainView.getContenitoreToDoU()
    return contenitoreToDoU
    contenitoreToDoU.removeAll()
    mainView.setDescrizioneUniText(universita.getDescrizione())
    this.descrizioneUni.setText(descrizioneUniText)
    rimuoviTuttiActionListener(mainView.getModificaDescrizioneUni())
    for (al : button.getActionListeners()) {
      button.removeActionListener(al)
    }
    rimuoviTuttiActionListener(mainView.getOrdineUniButton())
    for (al : button.getActionListeners()) {
      button.removeActionListener(al)
    }
    mainView.getModificaDescrizioneUni().addActionListener(generaActionListnerModificaDescrizione(universita, mainView))
    mainView.getOrdineUniButton().addActionListener(generaActionListnerModificaOrdine(universita, mainView))
    if (universita.getOrdinamento() != null) {
      universita.setToDoList(ordinaToDoList(universita.getToDoList(), universita.getOrdinamento()))
      new ArrayList(toDoList)
    }
    for (todo : universita.getToDoList()) {
      if (mostraCompletati || !todo.isCompletato()) {
        visualizzaToDo(todo, contenitoreToDoU, null)
        JPanel todoPanel = new JPanel()
        new JPanel()
        todoPanel.setLayout(new BoxLayout())
        // Color backgroundColor;
        if (todo.getSfondo() != null) {
          todo.getSfondo()
          return sfondo
        }
        else {
          new Color(255, 255, 255)
        }
        Color coloreTesto = getContrasto(backgroundColor)
        getContrasto(backgroundColor)
        double luminance = (0.299 * background.getRed() +
                0.587 * background.getGreen() +
                0.114 * background.getBlue()) / 255
        background.getRed()
        background.getGreen()
        background.getBlue()
        return luminance > 0.5 ? Color.BLACK : Color.WHITE
        todoPanel.setBackground(backgroundColor)
        JPanel titoloPanel = new JPanel()
        new JPanel()
        titoloPanel.setLayout(new BorderLayout())
        titoloPanel.setBackground(backgroundColor)
        JLabel titoloLabel = new JLabel(todo.getTitolo())
        new JLabel(todo.getTitolo())
        titoloLabel.setForeground(coloreTesto)
        titoloLabel.setBorder(BorderFactory.createEmptyBorder(2, 5, 2, 5))
        titoloPanel.add(titoloLabel, BorderLayout.CENTER)
        JPanel buttonsPanel = new JPanel()
        new JPanel()
        buttonsPanel.setLayout(new FlowLayout())
        buttonsPanel.setBackground(backgroundColor)
        buttonsPanel.add(generaModificaButton(coloreTesto, todo))
        buttonsPanel.add(generaEliminaButton(coloreTesto, todo, condivisione))
        buttonsPanel.add(generaShareButton(coloreTesto, todo))
        titoloPanel.add(buttonsPanel, BorderLayout.EAST)
        todoPanel.add(titoloPanel)
        todoPanel.setBorder(BorderFactory.createLineBorder(coloreTesto))
        JPanel descrizionePanel = new JPanel()
        new JPanel()
        descrizionePanel.setLayout(new FlowLayout())
        descrizionePanel.setBackground(backgroundColor)
        JLabel descrizioneLabel = new JLabel(todo.getDescrizione())
        new JLabel(todo.getDescrizione())
        descrizioneLabel.setForeground(coloreTesto)
        JCheckBox checkboxTodo = new JCheckBox()
        new JCheckBox()
        checkboxTodo.setSelected(todo.isCompletato())
        checkboxTodo.setBackground(backgroundColor)
        checkboxTodo.setForeground(coloreTesto)
        checkboxTodo.addItemListener(lambda)
        descrizionePanel.add(checkboxTodo)
        descrizionePanel.add(descrizioneLabel)
        todoPanel.add(descrizionePanel)
        if (todo.getChecklist() != null) {
          todoPanel.add(generaPanelCheckList(todo, backgroundColor, coloreTesto))
        }
        if (todo.getLink() != null) {
          todoPanel.add(generaPanelLink(todo, backgroundColor, coloreTesto, todoPanel))
        }
        if (todo.getScadenza() != null) {
          todoPanel.add(generaPanelScadenza(todo, backgroundColor, coloreTesto))
        }
        if (todo.getImmagine() != null) {
          todoPanel.add(generaPanelImmagine(todo, backgroundColor))
        }
        if (condivisione != null) {
          todoPanel.add(generaPanelCondiviso(condivisione, coloreTesto))
        }
        todoPanel.revalidate()
        todoPanel.repaint()
        contenitoreToDo.add(todoPanel)
        contenitoreToDo.revalidate()
        contenitoreToDo.repaint()
      }
    }
  }
  mainView.getBaUni().setVisible(haToDoUniversita)
}
